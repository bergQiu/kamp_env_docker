# How to use this?
#   Copy the example, create a new config.yaml file in the current path, 
# and configure options according to your development


Mongo:                 # 项目数据库实例参数
  Host:
    '192.168.7.6'        # MongoDB-server IP
  Port:
    50107              # MongoDB-server Port 默认27017
  Database:
    'kamp'        # database name 
  User:
    'kamp'
  Passwd:
    'ky18026'
Project:
  Host:
    '0.0.0.0'          # 项目启动地址可选'127.0.0.1'、'localhost'、'0.0.0.0'
  Port:
    8033              # 项目启动端口 默认8033
Dataset:
  Path:
    []
Log:
  version:
    1
  formatters:          # 日志输出格式对象
    simple:
      format:          # 日志输出格式
        '[%(asctime)s]-%(levelname)s-%(filename)s[%(lineno)d]->%(message)s'
  handlers:
    timeRoate:         # 日志回滚方式
      class:
        logging.handlers.TimedRotatingFileHandler
      formatter:
        simple
      level:           # 日志记录的级别
        INFO
      filename:
        ./logs/kamp.log    # 日志文件位置
      when:            # 日志切分单位
        D
      interval:        # 日志切分数量
        1
      backupCount:     # 日志最大数量(默认保留30天)
        30
      encoding:
        utf-8
    debug:
      class:
        logging.FileHandler
      level:
        INFO
      formatter:
        simple
      filename:
        debug.log
      encoding:
        utf-8
  loggers:
    productionLog:     # 成产环境使用
      level:
        INFO
      handlers:
        [timeRoate]
      propagate:
        yes
    developLog:        # 开发环境使用
      level:
        INFO
      handlers:
        [debug]
      propagate:
        yes

  

